{"version":3,"sources":["components/Wallpaper/utils/arrays.js","components/Wallpaper/utils/getBoundaries.js","components/Wallpaper/utils/partialSet.js","components/Wallpaper/utils/resizeToWindow.js","components/Wallpaper/utils/initCanvas.js","components/Wallpaper/utils/partialInvoke.js","components/Wallpaper/utils/draw.js","components/Wallpaper/utils/initBalls.js","components/Wallpaper/utils/gradient.js","components/Wallpaper/index.js"],"names":["ballsAmount","getBoundaries","maxRadius","speed","maxDistance","window","innerWidth","innerHeight","returnAfterSet","object","path","value","_","set","partialSet","_len","arguments","length","args","Array","_key","partial","apply","concat","resizeToWindow","flow","initCanvas","invoke","returnAfterInvoke","partialInvoke","_len2","_key2","partialSetFillStyle","color","trianglesArray","lines","chain","reduce","triangles","line","index","linesArr","takeRight","filter","line2","ids","findIndex","map","coordinates","initBalls","makeBallsArray","makeLinesArray","makeTrianglesArray","balls","listeners","listen","listener","push","newBalls","each","gradient","x1","y1","x2","y2","colors","Object","toConsumableArray","CONTEXT","document","getElementById","range","id","x","random","y","dx","dy","radius","flatten","ball","arr","ball2","inRange","Math","sqrt","body","onresize","width","height","animate","ballsState","skyColor","boundaries","drawRect","drawLine","triangle","x3","y3","drawTriangle","animloop","objectSpread","setBalls","requestAnimationFrame"],"mappings":"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","file":"static/js/8.2cfa9e55.chunk.js","sourcesContent":["import _ from \"lodash\";\n\nconst SUN_POINTS = 60;\nconst INFELICITY = 5;\n\nconst distance = (x1, y1, x2, y2) =>\n  Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n\nexport const ballsArray = (\n  ballsAmount,\n  getBoundaries,\n  maxRadius,\n  speed\n) => () =>\n    _.range(ballsAmount()).map(index => ({\n      id: index,\n      x: _.random(\n        getBoundaries()[0] + maxRadius[1],\n        getBoundaries()[2] - maxRadius[1]\n      ),\n      y: _.random(\n        getBoundaries()[1] + maxRadius[1],\n        getBoundaries()[3] - maxRadius[1]\n      ),\n      dx: _.random(-speed, speed, true),\n      dy: _.random(-speed, speed, true),\n      radius: _.random(maxRadius[0], maxRadius[1])\n    }));\n\nexport const linesArray = maxDistance => balls =>\n  _.flatten(\n    balls.map((ball, index, arr) =>\n      _(arr)\n        .chain()\n        .takeRight(arr.length - index - 1)\n        .filter(ball2 =>\n          _.inRange(distance(ball.x, ball.y, ball2.x, ball2.y), maxDistance)\n        )\n        .map(ball2 => ({\n          coordinates: [ball.x, ball.y, ball2.x, ball2.y],\n          ids: [ball.id, ball2.id]\n        }))\n        .value()\n    )\n  );\n\nexport const trianglesArray = lines =>\n  _(lines)\n    .chain()\n    .reduce(\n      (triangles, line, index, linesArr) =>\n        _(linesArr)\n          .chain()\n          .takeRight(linesArr.length - 1 - index)\n          .filter(line2 => line2.ids[0] === line.ids[1])\n          .filter(\n            line2 =>\n              _.findIndex(lines, { ids: [line.ids[0], line2.ids[1]] }) >= 0\n          )\n          .map(line2 => ({\n            coordinates: _.concat(\n              line.coordinates,\n              line2.coordinates[2],\n              line2.coordinates[3]\n            ),\n            ids: _.concat(line.ids, line2.ids[1])\n          }))\n          .concat(triangles)\n          .value(),\n      []\n    )\n    .value();\n\nexport const hotSunPoints = (x, y, radius) =>\n  _.range(SUN_POINTS).map(index => [\n    x +\n    radius * Math.cos((2 * Math.PI * index) / SUN_POINTS) +\n    INFELICITY * Math.sin(_.now() / 1000 + _.random()),\n    (y + radius * Math.sin((2 * Math.PI * index) / SUN_POINTS)) / 1.2\n  ]);\n","export const getBoundaries = () => [\n  0,\n  0,\n  window.innerWidth,\n  window.innerHeight\n];\n","import _ from \"lodash\";\n\nconst returnAfterSet = (object, path, value) => {\n  _.set(object, path, value);\n  return object;\n};\n\nexport const partialSet = (...args) => _.partial(returnAfterSet, ...args);\n","import _ from \"lodash\";\nimport { partialSet } from \"./partialSet\";\nimport { getBoundaries } from \"./getBoundaries\";\n\nexport const resizeToWindow = _.flow([\n  partialSet(_, \"width\", getBoundaries()[2]),\n  partialSet(_, \"height\", getBoundaries()[3])\n]);\n","import _ from \"lodash\";\nimport { resizeToWindow } from \"./resizeToWindow\";\n\nexport const initCanvas = _.flow([\n  resizeToWindow,\n  _.partial(_.invoke, _, \"getContext\", \"2d\")\n]);\n","import _ from \"lodash\";\n\nconst returnAfterInvoke = (object, path, ...args) => {\n  _.invoke(object, path, ...args);\n  return object;\n};\n\nexport const partialInvoke = (...args) => _.partial(returnAfterInvoke, ...args);\n","import _ from \"lodash\";\nimport { partialSet } from \"./partialSet\";\nimport { partialInvoke } from \"./partialInvoke\";\n\nconst partialSetFillStyle = color => partialSet(_, \"fillStyle\", color);\n\nconst isEven = num => num % 2 === 0;\n\nconst next = (arr, index) => arr[index + 1] || arr[0];\n\nexport const drawCircle = (x, y, radius, color) =>\n  _.flow([\n    partialInvoke(_, \"beginPath\"),\n    partialInvoke(_, \"arc\", x, y, radius, 0, 2 * Math.PI),\n    partialSetFillStyle(color),\n    partialInvoke(_, \"fill\")\n  ]);\n\nexport const clear = boundaries => partialInvoke(_, \"clearRect\", ...boundaries);\n\nexport const drawRect = (x1, y1, x2, y2, color) =>\n  _.flow([\n    partialInvoke(_, \"beginPath\"),\n    partialInvoke(_, \"rect\", x1, y1, x2, y2),\n    partialSetFillStyle(color),\n    partialInvoke(_, \"fill\")\n  ]);\n\nexport const drawLine = (x1, y1, x2, y2, color) =>\n  _.flow([\n    partialInvoke(_, \"beginPath\"),\n    partialInvoke(_, \"moveTo\", x1, y1),\n    partialInvoke(_, \"lineTo\", x2, y2),\n    partialSet(_, \"strokeStyle\", \"rgb(255, 255, 255)\"),\n    partialInvoke(_, \"stroke\")\n  ]);\n\nexport const drawTriangle = (x1, y1, x2, y2, x3, y3) =>\n  _.flow([\n    partialInvoke(_, \"beginPath\"),\n    partialInvoke(_, \"moveTo\", x1, y1),\n    partialInvoke(_, \"lineTo\", x2, y2),\n    partialInvoke(_, \"lineTo\", x3, y3),\n    partialInvoke(_, \"closePath\"),\n    partialSet(_, \"fillStyle\", \"rgba(255, 255, 255, 0.2)\"),\n    partialInvoke(_, \"fill\")\n  ]);\n\nexport const drawStar = (x, y, radius, color) =>\n  _.flow([\n    partialInvoke(_, \"beginPath\"),\n    partialInvoke(_, \"moveTo\", x, y),\n    partialInvoke(_, \"bezierCurveTo\", x, y - radius, x, y, x + radius / 2, y),\n    partialInvoke(_, \"bezierCurveTo\", x + radius / 2, y, x, y, x, y + radius),\n    partialInvoke(_, \"bezierCurveTo\", x, y + radius, x, y, x - radius / 2, y),\n    partialInvoke(_, \"bezierCurveTo\", x - radius / 2, y, x, y, x, y - radius),\n    partialSetFillStyle(color),\n    partialInvoke(_, \"fill\")\n  ]);\n\nexport const drawShape = (points, strokeColor, fillColor) =>\n  _.flow(\n    _.concat(\n      partialInvoke(_, \"beginPath\"),\n      partialInvoke(_, \"moveTo\", points[0][0], points[0][1]),\n      points.map(([x1, y1], index, pointsArr) =>\n        partialInvoke(\n          _,\n          \"bezierCurveTo\",\n          x1,\n          y1,\n          // isEven(index) ? x1 : next(pointsArr, index)[0],\n          // isEven(index) ? next(pointsArr, index)[1] : y1,\n          (x1 + next(pointsArr, index)[0]) / 2,\n          (y1 + next(pointsArr, index)[1]) / 2,\n          next(pointsArr, index)[0],\n          next(pointsArr, index)[1]\n        )\n      ),\n      partialSet(_, \"lineWidth\", 5),\n      partialSet(_, \"strokeStyle\", strokeColor),\n      partialInvoke(_, \"stroke\"),\n      partialSetFillStyle(fillColor),\n      partialInvoke(_, \"fill\")\n    )\n  );\n","import _ from \"lodash\";\n\nexport const initBalls = (\n  makeBallsArray,\n  makeLinesArray,\n  makeTrianglesArray\n) => {\n  let balls = makeBallsArray();\n  let lines = makeLinesArray(balls);\n  let triangles = makeTrianglesArray(lines);\n\n  const listeners = [];\n\n  const listen = listener => listeners.push(listener);\n\n  const update = () => {\n    _.each(listeners, listener => listener(balls, lines, triangles));\n  };\n\n  const set = newBalls => {\n    balls = newBalls(balls);\n    lines = makeLinesArray(balls);\n    triangles = makeTrianglesArray(lines);\n    update();\n  };\n\n  return {\n    listen,\n    set\n  };\n};\n","import _ from \"lodash\";\n\nimport { partialInvoke } from \"./partialInvoke\";\n\nexport const gradient = (x1, y1, x2, y2, colors) =>\n  _.flow(\n    _.concat(\n      _.partial(_.invoke, _, \"createLinearGradient\", x1, y1, x2, y2),\n      colors.map(color => partialInvoke(_, \"addColorStop\", ...color))\n    )\n  );\n","import _ from \"lodash\";\n\nimport { getBoundaries } from \"./utils/getBoundaries\";\nimport { resizeToWindow } from \"./utils/resizeToWindow\";\nimport { initCanvas } from \"./utils/initCanvas\";\nimport {\n  clear,\n  drawCircle,\n  drawLine,\n  drawTriangle,\n  drawRect,\n  drawStar,\n  drawShape\n} from \"./utils/draw\";\nimport {\n  ballsArray,\n  linesArray,\n  trianglesArray as makeTrianglesArray,\n  hotSunPoints\n} from \"./utils/arrays\";\nimport { initBalls } from \"./utils/initBalls\";\nimport { gradient } from \"./utils/gradient\";\n\nlet windowResized = false;\n\nconst BALLS_AMOUNT = () =>\n  (300 * getBoundaries()[2] * getBoundaries()[3]) / (1980 * 1080);\nconst MAX_RADIUS = [2, 15];\nconst SPEED = 0.05;\nconst MAX_DISTANCE = 50;\nconst CONTEXT = initCanvas(document.getElementById(\"canvas\"));\nconst night = () =>\n  gradient(0, 0, 0, getBoundaries()[3], [[0.25, \"#001E39\"], [1, \"#005EAD\"]])(\n    CONTEXT\n  );\nconst evening = () =>\n  gradient(0, 0, 0, getBoundaries()[3], [\n    [0, \"rgb(109, 24, 136)\"],\n    [1, \"rgb(228, 51, 126)\"]\n  ])(CONTEXT);\n\nconst makeBallsArray = ballsArray(\n  BALLS_AMOUNT,\n  getBoundaries,\n  MAX_RADIUS,\n  SPEED\n);\nconst makeLinesArray = linesArray(MAX_DISTANCE);\n\ndocument.body.onresize = () => {\n  windowResized = true;\n  resizeToWindow(document.getElementById(\"canvas\"));\n  document.getElementById(\"canvas\").width = getBoundaries()[2];\n  document.getElementById(\"canvas\").height = getBoundaries()[3];\n  animate();\n};\n\nconst setBalls = ballsState => {\n  ballsState.set(\n    _.partial(_.map, _, ball => {\n      const dx = _.inRange(\n        ball.x + ball.dx,\n        getBoundaries()[0] + ball.radius,\n        getBoundaries()[2] - ball.radius\n      )\n        ? ball.dx\n        : -ball.dx;\n      const dy = _.inRange(\n        ball.y + ball.dy,\n        getBoundaries()[1] + ball.radius,\n        getBoundaries()[3] - ball.radius\n      )\n        ? ball.dy\n        : -ball.dy;\n      return {\n        ...ball,\n        x: ball.x + dx,\n        y: ball.y + dy,\n        dx,\n        dy\n      };\n    })\n  );\n};\n\nconst animate = () => {\n  windowResized = false;\n\n  const ballsState = initBalls(\n    makeBallsArray,\n    makeLinesArray,\n    makeTrianglesArray\n  );\n\n  const skyColor = night();\n\n  ballsState.listen((balls, lines, triangles) => {\n    clear(getBoundaries())(CONTEXT);\n    drawRect(...getBoundaries(), skyColor)(CONTEXT);\n    // drawCircle(\n    //   getBoundaries()[2] / 2,\n    //   getBoundaries()[3],\n    //   100,\n    //   \"rgb(243, 173, 69)\"\n    // )(CONTEXT);\n    // drawShape(\n    //   hotSunPoints(\n    //     getBoundaries()[2] / 2,\n    //     getBoundaries()[3],\n    //     getBoundaries()[2] / 5\n    //   ),\n    //   // hotSunPoints(100, 100, 100),\n    //   \"#BA0000\",\n    //   \"rgb(243, 173, 69)\"\n    // )(CONTEXT);\n    _.each(balls, ball =>\n      drawStar(ball.x, ball.y, ball.radius, \"white\")(CONTEXT)\n    );\n    _.each(lines, line => drawLine(...line.coordinates)(CONTEXT));\n    _.each(triangles, triangle =>\n      drawTriangle(...triangle.coordinates)(CONTEXT)\n    );\n  });\n\n  (function animloop () {\n    setBalls(ballsState);\n    requestAnimationFrame(animloop);\n  })();\n};\n\nanimate();\n\n// drawShape(hotSunPoints(100, 100, 100), \"black\")(CONTEXT);\n\n// CONTEXT.beginPath();\n// CONTEXT.moveTo(0, 100);\n// CONTEXT.bezierCurveTo(0, 100, 0, 200, 100, 200);\n// CONTEXT.bezierCurveTo(100, 200, 200, 200, 200, 100);\n// CONTEXT.bezierCurveTo(200, 100, 200, 0, 100, 0);\n// CONTEXT.bezierCurveTo(100, 0, 0, 0, 0, 100);\n// CONTEXT.fill();\n"],"sourceRoot":""}